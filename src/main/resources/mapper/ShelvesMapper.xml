<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ShelvesMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.model.Shelves">
    <id column="shelves_id" jdbcType="INTEGER" property="shelvesId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="discount" jdbcType="VARCHAR" property="discount" />
    <result column="num" jdbcType="DOUBLE" property="num" />
    <result column="times" jdbcType="TIMESTAMP" property="times" />
    <result column="image_ids" jdbcType="VARCHAR" property="imageIds" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    shelves_id, goods_id, discount, num, times, image_ids
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.model.ShelvesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shelves
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shelves
    where shelves_id = #{shelvesId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shelves
    where shelves_id = #{shelvesId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.model.ShelvesExample">
    delete from shelves
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.model.Shelves">
    insert into shelves (shelves_id, goods_id, discount, 
      num, times, image_ids
      )
    values (#{shelvesId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{discount,jdbcType=VARCHAR}, 
      #{num,jdbcType=DOUBLE}, #{times,jdbcType=TIMESTAMP}, #{imageIds,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.model.Shelves">
    insert into shelves
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shelvesId != null">
        shelves_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="times != null">
        times,
      </if>
      <if test="imageIds != null">
        image_ids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shelvesId != null">
        #{shelvesId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=DOUBLE},
      </if>
      <if test="times != null">
        #{times,jdbcType=TIMESTAMP},
      </if>
      <if test="imageIds != null">
        #{imageIds,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.model.ShelvesExample" resultType="java.lang.Long">
    select count(*) from shelves
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shelves
    <set>
      <if test="row.shelvesId != null">
        shelves_id = #{row.shelvesId,jdbcType=INTEGER},
      </if>
      <if test="row.goodsId != null">
        goods_id = #{row.goodsId,jdbcType=INTEGER},
      </if>
      <if test="row.discount != null">
        discount = #{row.discount,jdbcType=VARCHAR},
      </if>
      <if test="row.num != null">
        num = #{row.num,jdbcType=DOUBLE},
      </if>
      <if test="row.times != null">
        times = #{row.times,jdbcType=TIMESTAMP},
      </if>
      <if test="row.imageIds != null">
        image_ids = #{row.imageIds,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shelves
    set shelves_id = #{row.shelvesId,jdbcType=INTEGER},
      goods_id = #{row.goodsId,jdbcType=INTEGER},
      discount = #{row.discount,jdbcType=VARCHAR},
      num = #{row.num,jdbcType=DOUBLE},
      times = #{row.times,jdbcType=TIMESTAMP},
      image_ids = #{row.imageIds,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.model.Shelves">
    update shelves
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=DOUBLE},
      </if>
      <if test="times != null">
        times = #{times,jdbcType=TIMESTAMP},
      </if>
      <if test="imageIds != null">
        image_ids = #{imageIds,jdbcType=VARCHAR},
      </if>
    </set>
    where shelves_id = #{shelvesId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.model.Shelves">
    update shelves
    set goods_id = #{goodsId,jdbcType=INTEGER},
      discount = #{discount,jdbcType=VARCHAR},
      num = #{num,jdbcType=DOUBLE},
      times = #{times,jdbcType=TIMESTAMP},
      image_ids = #{imageIds,jdbcType=VARCHAR}
    where shelves_id = #{shelvesId,jdbcType=INTEGER}
  </update>
</mapper>
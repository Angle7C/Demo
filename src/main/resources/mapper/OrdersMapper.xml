<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.model.Orders">
    <id column="orders_id" jdbcType="VARCHAR" property="ordersId" />
    <result column="goods_id" jdbcType="VARCHAR" property="goodsId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="num" jdbcType="DOUBLE" property="num" />
    <result column="times" jdbcType="TIMESTAMP" property="times" />
    <result column="total_value" jdbcType="DOUBLE" property="totalValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orders_id, goods_id, user_id, num, times, total_value
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.model.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where orders_id = #{ordersId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from orders
    where orders_id = #{ordersId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.model.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.model.Orders">
    insert into orders (orders_id, goods_id, user_id, 
      num, times, total_value
      )
    values (#{ordersId,jdbcType=VARCHAR}, #{goodsId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{num,jdbcType=DOUBLE}, #{times,jdbcType=TIMESTAMP}, #{totalValue,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.model.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ordersId != null">
        orders_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="times != null">
        times,
      </if>
      <if test="totalValue != null">
        total_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ordersId != null">
        #{ordersId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=DOUBLE},
      </if>
      <if test="times != null">
        #{times,jdbcType=TIMESTAMP},
      </if>
      <if test="totalValue != null">
        #{totalValue,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.model.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="row.ordersId != null">
        orders_id = #{row.ordersId,jdbcType=VARCHAR},
      </if>
      <if test="row.goodsId != null">
        goods_id = #{row.goodsId,jdbcType=VARCHAR},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=VARCHAR},
      </if>
      <if test="row.num != null">
        num = #{row.num,jdbcType=DOUBLE},
      </if>
      <if test="row.times != null">
        times = #{row.times,jdbcType=TIMESTAMP},
      </if>
      <if test="row.totalValue != null">
        total_value = #{row.totalValue,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set orders_id = #{row.ordersId,jdbcType=VARCHAR},
      goods_id = #{row.goodsId,jdbcType=VARCHAR},
      user_id = #{row.userId,jdbcType=VARCHAR},
      num = #{row.num,jdbcType=DOUBLE},
      times = #{row.times,jdbcType=TIMESTAMP},
      total_value = #{row.totalValue,jdbcType=DOUBLE}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.model.Orders">
    update orders
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=DOUBLE},
      </if>
      <if test="times != null">
        times = #{times,jdbcType=TIMESTAMP},
      </if>
      <if test="totalValue != null">
        total_value = #{totalValue,jdbcType=DOUBLE},
      </if>
    </set>
    where orders_id = #{ordersId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.model.Orders">
    update orders
    set goods_id = #{goodsId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      num = #{num,jdbcType=DOUBLE},
      times = #{times,jdbcType=TIMESTAMP},
      total_value = #{totalValue,jdbcType=DOUBLE}
    where orders_id = #{ordersId,jdbcType=VARCHAR}
  </update>
</mapper>